Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is HP using "-V" did not match "HP C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_24537/fast"


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is HP using "-V" did not match "HP C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_5d182/fast"


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is HP using "-V" did not match "HP C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_628a1/fast"


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is HP using "-V" did not match "HP C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.


Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_11687/fast"


Agreeing to the Xcode/iOS license requires admin privileges, please run “sudo xcodebuild -license” and then retry this command.




Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is HP using "-V" did not match "HP C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_dc141/fast"

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is HP using "-V" did not match "HP C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_3208a/fast"

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is HP using "-V" did not match "HP C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_8e333/fast"

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -Aa 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/cc 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags:  

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: -c 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --c++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" failed.
Compiler: /usr/bin/c++ 
Build flags: 
Id flags: --ec++ 

The output was:
69

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the CXX compiler is IAR using "" did not match "IAR .+ Compiler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is HP using "-V" did not match "HP C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.
Determining if the C compiler works failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_fd90a/fast"

You have not agreed to the Xcode license agreements, please run 'xcodebuild -license' (for user-level acceptance) or 'sudo xcodebuild -license' (for system-wide acceptance) from within a Terminal window to review and agree to the Xcode license agreements.


Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin17.4.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Checking whether the ASM compiler is HP using "-V" did not match "HP C":
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin17.4.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":
clang: error: unknown argument: '-qversion'
clang: error: no input files
Checking whether the ASM compiler is MSVC using "/?" did not match "Microsoft":
clang: error: no such file or directory: '/?'
clang: error: no input files
Checking whether the ASM compiler is TI using "-h" did not match "Texas Instruments":
clang: error: unknown argument: '-h'
clang: error: no input files
Checking whether the ASM compiler is IAR using "" did not match "IAR Assembler":
clang: error: no input files
Checking whether the ASM compiler is ARMCC using "" did not match "(ARM Compiler)|(ARM Assembler)":
clang: error: no input files
Checking whether the ASM compiler is NASM using "-v" did not match "(NASM version)":
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin17.4.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Checking whether the ASM compiler is YASM using "--version" did not match "(yasm)":
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin17.4.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
Checking whether the ASM compiler is ADSP using "-version" did not match "Analog Devices":
clang: error: unknown argument: '-version'
clang: error: no input files
Determining if the include file link.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_8b53e/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_8b53e.dir/build.make CMakeFiles/cmTC_8b53e.dir/build
Building C object CMakeFiles/cmTC_8b53e.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_8b53e.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'link.h' file not found
#include <link.h>
         ^~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_8b53e.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_8b53e/fast] Error 2


Determining if the include file malloc.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_da92b/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_da92b.dir/build.make CMakeFiles/cmTC_da92b.dir/build
Building C object CMakeFiles/cmTC_da92b.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_da92b.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'malloc.h' file not found
#include <malloc.h>
         ^~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_da92b.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_da92b/fast] Error 2


Determining if the include file ndir.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_5c559/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_5c559.dir/build.make CMakeFiles/cmTC_5c559.dir/build
Building C object CMakeFiles/cmTC_5c559.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_5c559.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'ndir.h' file not found
#include <ndir.h>
         ^~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_5c559.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_5c559/fast] Error 2


Determining if the include file sys/ndir.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_95b5c/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_95b5c.dir/build.make CMakeFiles/cmTC_95b5c.dir/build
Building C object CMakeFiles/cmTC_95b5c.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_95b5c.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'sys/ndir.h' file not found
#include <sys/ndir.h>
         ^~~~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_95b5c.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_95b5c/fast] Error 2


Determining if the include file valgrind/valgrind.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_af983/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_af983.dir/build.make CMakeFiles/cmTC_af983.dir/build
Building C object CMakeFiles/cmTC_af983.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_af983.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'valgrind/valgrind.h' file not found
#include <valgrind/valgrind.h>
         ^~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_af983.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_af983/fast] Error 2


Determining if the include file CrashReporterClient.h exists failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_4fbf8/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_4fbf8.dir/build.make CMakeFiles/cmTC_4fbf8.dir/build
Building C object CMakeFiles/cmTC_4fbf8.dir/CheckIncludeFile.c.o
/usr/bin/cc   -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_4fbf8.dir/CheckIncludeFile.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckIncludeFile.c:1:10: fatal error: 'CrashReporterClient.h' file not found
#include <CrashReporterClient.h>
         ^~~~~~~~~~~~~~~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_4fbf8.dir/CheckIncludeFile.c.o] Error 1
make: *** [cmTC_4fbf8/fast] Error 2


Determining if the function clock_gettime exists in the rt failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_9eed7/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_9eed7.dir/build.make CMakeFiles/cmTC_9eed7.dir/build
Building C object CMakeFiles/cmTC_9eed7.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=clock_gettime -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_9eed7.dir/CheckFunctionExists.c.o   -c /Applications/CMake.app/Contents/share/cmake-3.12/Modules/CheckFunctionExists.c
Linking C executable cmTC_9eed7
/Applications/CMake.app/Contents/bin/cmake -E cmake_link_script CMakeFiles/cmTC_9eed7.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=clock_gettime -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_9eed7.dir/CheckFunctionExists.c.o  -o cmTC_9eed7 -lrt -lm 
ld: library not found for -lrt
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [cmTC_9eed7] Error 1
make: *** [cmTC_9eed7/fast] Error 2


Determining if the function setupterm exists in the tinfo failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_1f5ed/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_1f5ed.dir/build.make CMakeFiles/cmTC_1f5ed.dir/build
Building C object CMakeFiles/cmTC_1f5ed.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=setupterm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_1f5ed.dir/CheckFunctionExists.c.o   -c /Applications/CMake.app/Contents/share/cmake-3.12/Modules/CheckFunctionExists.c
Linking C executable cmTC_1f5ed
/Applications/CMake.app/Contents/bin/cmake -E cmake_link_script CMakeFiles/cmTC_1f5ed.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=setupterm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_1f5ed.dir/CheckFunctionExists.c.o  -o cmTC_1f5ed -ltinfo -lm 
ld: library not found for -ltinfo
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [cmTC_1f5ed] Error 1
make: *** [cmTC_1f5ed/fast] Error 2


Determining if the function setupterm exists in the terminfo failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_07b7e/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_07b7e.dir/build.make CMakeFiles/cmTC_07b7e.dir/build
Building C object CMakeFiles/cmTC_07b7e.dir/CheckFunctionExists.c.o
/usr/bin/cc   -DCHECK_FUNCTION_EXISTS=setupterm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_07b7e.dir/CheckFunctionExists.c.o   -c /Applications/CMake.app/Contents/share/cmake-3.12/Modules/CheckFunctionExists.c
Linking C executable cmTC_07b7e
/Applications/CMake.app/Contents/bin/cmake -E cmake_link_script CMakeFiles/cmTC_07b7e.dir/link.txt --verbose=1
/usr/bin/cc  -DCHECK_FUNCTION_EXISTS=setupterm -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk -Wl,-search_paths_first -Wl,-headerpad_max_install_names   CMakeFiles/cmTC_07b7e.dir/CheckFunctionExists.c.o  -o cmTC_07b7e -lterminfo -lm 
ld: library not found for -lterminfo
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make[1]: *** [cmTC_07b7e] Error 1
make: *** [cmTC_07b7e/fast] Error 2


Determining if the posix_fallocate exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_47c15/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_47c15.dir/build.make CMakeFiles/cmTC_47c15.dir/build
Building C object CMakeFiles/cmTC_47c15.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_47c15.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'posix_fallocate'
  return ((int*)(&posix_fallocate))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_47c15.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_47c15/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <fcntl.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef posix_fallocate
  return ((int*)(&posix_fallocate))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the lseek64 exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_af5f8/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_af5f8.dir/build.make CMakeFiles/cmTC_af5f8.dir/build
Building C object CMakeFiles/cmTC_af5f8.dir/CheckSymbolExists.c.o
/usr/bin/cc -D_LARGEFILE64_SOURCE  -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_af5f8.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:9:19: error: use of undeclared identifier 'lseek64'; did you mean 'lseek'?
  return ((int*)(&lseek64))[argc];
                  ^~~~~~~
                  lseek
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/unistd.h:464:8: note: 'lseek' declared here
off_t    lseek(int, off_t, int);
         ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_af5f8.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_af5f8/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <sys/types.h>
#include <unistd.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef lseek64
  return ((int*)(&lseek64))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the mallctl exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_41577/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_41577.dir/build.make CMakeFiles/cmTC_41577.dir/build
Building C object CMakeFiles/cmTC_41577.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_41577.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:2:10: fatal error: 'malloc_np.h' file not found
#include <malloc_np.h>
         ^~~~~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_41577.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_41577/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <malloc_np.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef mallctl
  return ((int*)(&mallctl))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the mallinfo exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_0532b/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_0532b.dir/build.make CMakeFiles/cmTC_0532b.dir/build
Building C object CMakeFiles/cmTC_0532b.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_0532b.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:2:10: fatal error: 'malloc.h' file not found
#include <malloc.h>
         ^~~~~~~~~~
1 error generated.
make[1]: *** [CMakeFiles/cmTC_0532b.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_0532b/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <malloc.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef mallinfo
  return ((int*)(&mallinfo))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the strerror_s exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_47c05/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_47c05.dir/build.make CMakeFiles/cmTC_47c05.dir/build
Building C object CMakeFiles/cmTC_47c05.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_47c05.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'strerror_s'; did you mean 'strerror_r'?
  return ((int*)(&strerror_s))[argc];
                  ^~~~~~~~~~
                  strerror_r
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/string.h:116:6: note: 'strerror_r' declared here
int      strerror_r(int __errnum, char *__strerrbuf, size_t __buflen);
         ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_47c05.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_47c05/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <string.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef strerror_s
  return ((int*)(&strerror_s))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the __GLIBC__ exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_5cd26/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_5cd26.dir/build.make CMakeFiles/cmTC_5cd26.dir/build
Building C object CMakeFiles/cmTC_5cd26.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_5cd26.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier '__GLIBC__'
  return ((int*)(&__GLIBC__))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_5cd26.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_5cd26/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <stdio.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef __GLIBC__
  return ((int*)(&__GLIBC__))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the sched_getaffinity exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_0cf6c/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_0cf6c.dir/build.make CMakeFiles/cmTC_0cf6c.dir/build
Building C object CMakeFiles/cmTC_0cf6c.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_0cf6c.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'sched_getaffinity'
  return ((int*)(&sched_getaffinity))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_0cf6c.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_0cf6c/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <sched.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef sched_getaffinity
  return ((int*)(&sched_getaffinity))[argc];
#else
  (void)argc;
  return 0;
#endif
}

Determining if the CPU_COUNT exist failed with the following output:
Change Dir: /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp

Run Build Command:"/usr/bin/make" "cmTC_ce223/fast"
/Applications/Xcode.app/Contents/Developer/usr/bin/make -f CMakeFiles/cmTC_ce223.dir/build.make CMakeFiles/cmTC_ce223.dir/build
Building C object CMakeFiles/cmTC_ce223.dir/CheckSymbolExists.c.o
/usr/bin/cc   -Werror=unguarded-availability-new -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk   -o CMakeFiles/cmTC_ce223.dir/CheckSymbolExists.c.o   -c /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8:19: error: use of undeclared identifier 'CPU_COUNT'
  return ((int*)(&CPU_COUNT))[argc];
                  ^
1 error generated.
make[1]: *** [CMakeFiles/cmTC_ce223.dir/CheckSymbolExists.c.o] Error 1
make: *** [cmTC_ce223/fast] Error 2

File /Users/gs/Documents/Capstone/SVF/llvm-6.0.0.obj/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <sched.h>

int main(int argc, char** argv)
{
  (void)argv;
#ifndef CPU_COUNT
  return ((int*)(&CPU_COUNT))[argc];
#else
  (void)argc;
  return 0;
#endif
}

